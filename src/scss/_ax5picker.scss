@mixin ax-picker() {
	box-sizing: $ax5picker-box-model;
	@include ax-background($ax5picker-bg);
	border: $ax5picker-inner-border;
	border-radius: $ax5picker-border-radius;
	box-shadow: $ax5picker-box-shadow;

	z-index: $ax5picker-z-index;
	position: fixed;
	left: 0px;
	top: 0px;
	//overflow: hidden;
}

@mixin ax-picker-section() {
	.ax-picker-heading {
		//font-size: 1em;
		font-weight: 600;
		padding: $ax5picker-heading-padding;
		border-bottom: 1px solid transparent;
		.badge {
			font-size: 0.8em;
			color: $ax5picker-default-heading-bg;
			@include ax-background($ax5picker-default-text);
		}
	}
	.ax-picker-body {
		padding: $ax5picker-body-padding;
		text-align: center;
		.ax-picker-contents {
			padding-top: $ax5picker-body-padding;
			padding-bottom: $ax5picker-body-padding;
		}
		.ax-picker-buttons {
			margin-top: $ax5picker-body-padding;
			button {
				&:not(:last-child) {
					margin-right: 3px;
				}
			}
		}
	}

	.ax-picker-arrow-top {
		@include picker-arrow($ax5picker-arrow-size, $ax5picker-arrow-border-width, top);
	}
	.ax-picker-arrow-right {
		@include picker-arrow($ax5picker-arrow-size, $ax5picker-arrow-border-width, right);
	}
	.ax-picker-arrow-bottom {
		@include picker-arrow($ax5picker-arrow-size, $ax5picker-arrow-border-width, bottom);
	}
	.ax-picker-arrow-left {
		@include picker-arrow($ax5picker-arrow-size, $ax5picker-arrow-border-width, left);
	}
}

@mixin picker-variant($text-color, $border, $heading-bg-color) {
	border: $ax5picker-inner-border;
	border-color: $ax5picker-inner-border-color;
	.ax-picker-heading {
		color: $text-color;
		@include ax-background($heading-bg-color);
		.badge {
			color: $heading-bg-color;
			@include ax-background($text-color);
		}
	}
	.ax-picker-body {

	}
}

@mixin picker-arrow($arrow-size, $arrow-border-width, $arrow-direction){

	//
	//@debug( nth($ax5picker-inner-border, 3) );
	$arrow-bg: nth($ax5picker-bg, 1);
	$arrow-border-color: $ax5picker-inner-border-color;


	position: absolute;
	width: 0;
	height: 0;

	@if($arrow-direction == top) {
		left: 50%;
		top: 0px;
	}
	@else if($arrow-direction == right){
		right: 0px;
		top: 50%;
	}
	@else if($arrow-direction == bottom){
		left: 50%;
		bottom: 0px;
	}
	@else if($arrow-direction == left){
		left: 0px;
		top: 50%;
	}

	&:before
	{
		content: ' ';
		position: absolute;
		width: 0;
		height: 0;

		@if($arrow-direction == top) {
			left: - ($arrow-size);
			top: - ($arrow-size * 2);
			border-left: $arrow-size solid transparent;
			border-right: $arrow-size solid transparent;
			border-bottom: ($arrow-size * 2) solid $arrow-border-color;
		}
		@else if($arrow-direction == right){
			right: - ($arrow-size * 2);
			top: - ($arrow-size);
			border-top: $arrow-size solid transparent;
			border-bottom: $arrow-size solid transparent;
			border-left: ($arrow-size * 2) solid $arrow-border-color;
		}
		@else if($arrow-direction == bottom){
			left: - ($arrow-size);
			bottom: - ($arrow-size * 2);
			border-left: $arrow-size solid transparent;
			border-right: $arrow-size solid transparent;
			border-top: ($arrow-size * 2) solid $arrow-border-color;
		}
		@else if($arrow-direction == left){
			left: - ($arrow-size * 2);
			top: - ($arrow-size);
			border-top: $arrow-size solid transparent;
			border-bottom: $arrow-size solid transparent;
			border-right: ($arrow-size * 2) solid $arrow-border-color;
		}
	}

	&:after
	{
		content: ' ';
		position: absolute;
		width: 0;
		height: 0;

		@if($arrow-direction == top) {
			left: - ($arrow-size);
			top: - ($arrow-size * 2) + ($arrow-border-width * 2);
			border-left: ($arrow-size) solid transparent;
			border-right: ($arrow-size) solid transparent;
			border-bottom: ($arrow-size * 2) solid $arrow-bg;
		}
		@else if($arrow-direction == right){
			right: - ($arrow-size * 2) + ($arrow-border-width * 2);
			top: - ($arrow-size);
			border-top: ($arrow-size) solid transparent;
			border-bottom: ($arrow-size) solid transparent;
			border-left: ($arrow-size * 2) solid $arrow-bg;
		}
		@else if($arrow-direction == bottom){
			left: - ($arrow-size);
			bottom: - ($arrow-size * 2) + ($arrow-border-width * 2);
			border-left: ($arrow-size) solid transparent;
			border-right: ($arrow-size) solid transparent;
			border-top: ($arrow-size * 2) solid $arrow-bg;
		}
		@else if($arrow-direction == left){
			left: - ($arrow-size * 2) + ($arrow-border-width * 2);
			top: - ($arrow-size);
			border-top: ($arrow-size) solid transparent;
			border-bottom: ($arrow-size) solid transparent;
			border-right: ($arrow-size * 2) solid $arrow-bg;
		}
	}
}

@include keyframes(ax-picker) {
	0% {
		opacity: 0.0;
		@include transform(scale(1));
	}
	1% {
		opacity: 0.0;
		@include transform(scale(0.3));
	}
	100% {
		opacity: 1.0;
		@include transform(scale(1));
	}
}


@include keyframes(ax-picker-destroy) {
	from {
		@include transform(scale(1));
		opacity: 1.0;
	}
	to {
		@include transform(scale(0.5));
		opacity: 0.0;
	}
}

// mixins --------------------------------------------- end

.ax5-ui-picker {
	@include animation(ax-picker $ax5picker-easing-time-open $ease-out-back);
	@include transform(translateZ(0));

	@include ax-picker();
	@include ax-picker-section();

	@include picker-variant($ax5picker-default-text, $ax5picker-default-border, $ax5picker-default-heading-bg);

	&.primary {
		@include picker-variant($ax5picker-primary-text, $ax5picker-primary-border, $ax5picker-primary-heading-bg);
	}
	&.success {
		@include picker-variant($ax5picker-success-text, $ax5picker-success-border, $ax5picker-success-heading-bg);
	}
	&.info {
		@include picker-variant($ax5picker-info-text, $ax5picker-info-border, $ax5picker-info-heading-bg);
	}
	&.warning {
		@include picker-variant($ax5picker-warning-text, $ax5picker-warning-border, $ax5picker-warning-heading-bg);
	}
	&.danger {
		@include picker-variant($ax5picker-danger-text, $ax5picker-danger-border, $ax5picker-danger-heading-bg);
	}

	&.destroy {
		@include animation(ax-picker-destroy $ax5picker-easing-time-close $ease-in-back forwards);
	}
}